USE CLASSICMODELS;

INSERT INTO CARRINHO_COMPRA 
		(CODIGOPRODUTOC, QUANTIDADEC, PRECOC, CODIGOCLIENTEC)
		VALUES ('S10_1678', 100, 50.00, 112);
        
SELECT * FROM CLASSICMODELS.CUSTOMERS WHERE SALESREPEMPLOYEENUMBER IS NOT NULL;
SELECT * FROM CLASSICMODELS.EMPLOYEES WHERE JOBTITLE = 'SALES REP';

CALL GERAR_PEDIDO(103, 1165, @RESUL);
select @resul;

select * from carrinho_compra;
select * from products where productcode = 'S10_1678';



CREATE TABLE CARRINHO_COMPRA(
CODIGOPRODUTOC VARCHAR(15) NOT NULL,
QUANTIDADEC INT NOT NULL,
PRECOC DOUBLE NOT NULL,
CODIGOCLIENTEC INT NOT NULL PRIMARY KEY
)ENGINE = InnoDB;


DELIMITER $
CREATE PROCEDURE GERAR_PEDIDO(IN PARAM_CODIGOCLIENTE INT, IN PARAM_CODIGOVENDEDOR INT, OUT var_RESULTADO VARCHAR(200))
BEGIN
	DECLARE CODIGOCLIENTE INT DEFAULT 0; 
    DECLARE CODIGOVENDEDOR INT DEFAULT 0; 
    DECLARE QUANTIDADEPRODUTOS INT DEFAULT 0;
    DECLARE CONTA INT DEFAULT 0;
    DECLARE VAR_NUMEROPEDIDO INT DEFAULT 0;
    DECLARE CODIGOPRODUTO INT DEFAULT 0;
    DECLARE PRECO DOUBLE DEFAULT 0.00;
    DECLARE RESULTADO VARCHAR(200) DEFAULT NULL;
    
	SELECT IFNULL((CUSTOMERNUMBER),0) INTO CODIGOCLIENTE 
		FROM CUSTOMERS 
        WHERE CUSTOMERNUMBER = PARAM_CODIGOCLIENTE;
        
	IF CODIGOCLIENTE = 0 THEN
		SET RESULTADO = CONCAT('O codigo ', PARAM_CODIGOCLIENTE,' do cliente, é invalido');
        
	ELSE 
		SELECT IFNULL((EMPLOYEENUMBER),0) INTO CODIGOVENDEDOR 
		FROM EMPLOYEES 
        WHERE EMPLOYEENUMBER = PARAM_CODIGOVENDEDOR;
        
			IF CODIGOVENDEDOR = 0 THEN
				SET RESULTADO = CONCAT('O codigo ', PARAM_CODIGOVENDEDOR,' do vendedor, é invalido');
			ELSE
				SELECT IFNULL((CODIGOCLIENTEC),0) INTO CODIGOCLIENTE 
				FROM CARRINHO_COMPRA 
				WHERE CODIGOCLIENTEC = PARAM_CODIGOCLIENTE;
				
					IF CODIGOCLIENTE = 0 THEN
						SET RESULTADO = CONCAT('O codigo ', PARAM_CODIGOCLIENTE,' do cliente não está no carrinho');
					
					ELSE
						START TRANSACTION;
                         SELECT MAX(ORDERNUMBER) + 1 INTO VAR_NUMEROPEDIDO FROM ORDERS;
                         
							INSERT INTO ORDERS 
							(ORDERNUMBER, ORDERDATE, REQUIREDDATE, STATUS, CUSTOMERNUMBER)
							VALUES (VAR_NUMEROPEDIDO, CURDATE() , CURDATE(), 'SHIPPED', CODIGOCLIENTE );
							
                            SELECT IFNULL((QUANTIDADEC),0) INTO QUANTIDADEPRODUTOS 
							FROM CARRINHO_COMPRA 
							WHERE CODIGOCLIENTEC = PARAM_CODIGOCLIENTE;
								IF CODIGOCLIENTE = 0 THEN
									SET RESULTADO = 'Não tem produtos no carrinho';					
								ELSE
									WHILE CONTA < QUANTIDADEPRODUTOS DO
										
										SELECT CODIGOPRODUTOC INTO CODIGOPRODUTO FROM CARRINHO_COMPRA WHERE CODIGOCLIENTEC = PARAM_CODIGOCLIENTE;
                                        SELECT PRECOC INTO PRECO FROM CARRINHO_COMPRA WHERE CODIGOCLIENTEC = PARAM_CODIGOCLIENTE;
                                        
										CALL GERAR_ITEM_PEDIDO(CODIGOPRODUTO, QUANTIDADEPRODUTOS, PRECO, VAR_NUMEROPEDIDO, @RESULTAD);
                                        
                                        UPDATE 	COSTUMERS
										SET SALESREPEMPLOYEENUMBER = PARAM_CODIGOVENDEDOR
										WHERE CUSTOMERNUMBER = CODIGOCLIENTE;
                                        
                                        SELECT IFNULL((@RESULTAD),'') INTO RESULTADO;
											IF RESULTADO = '' THEN
												ROLLBACK;
											ELSE
												COMMIT;
											END IF;
                                        SET CONTA = CONTA + 1;
									END WHILE;
                        
								END IF;
					END IF;
			
        END IF;
	END IF;
    SET var_RESULTADO = RESULTADO;
END$
DELIMITER ;


DELIMITER $
CREATE PROCEDURE GERAR_ITEM_PEDIDO(IN VAR_CODIGOPRODUTO INT, IN VAR_QUANTIDADEPRODUTOS INT, IN VAR_PRECO INT, IN VAR_NUMEROPEDIDO INT, OUT VAR_RESULTADO VARCHAR(80))
BEGIN
	DECLARE CODIGO_PRODUTO INT DEFAULT 0;
    DECLARE QUANTIDADE_ESTOQUE INT DEFAULT 0;
    DECLARE RESULTADO VARCHAR(80) DEFAULT NULL;
    
	SELECT IFNULL((PRODUCTCODE),0) INTO CODIGO_PRODUTO 
				FROM PRODUCTS 
				WHERE PRODUCTCODE = VAR_CODIGOPRODUTO;
				
					IF CODIGO_PRODUTO = 0 THEN
						SET RESULTADO = CONCAT('O codigo ', CODIGO_PRODUTO,' do produto não existe na tabela products');
                        
					ELSE
						SELECT QUANTITYINSTOCK INTO QUANTIDADE_ESTOQUE
                        FROM PRODUCTS WHERE PRODUCTCODE = CODIGO_PRODUTO;
                        
                        IF QUANTIDADE_ESTOQUE < VAR_QUANTIDADEPRODUTOS THEN
							SET RESULTADO = CONCAT('Quantidade de produto em estoque insuficiente');
						
                        ELSE
							INSERT INTO ORDERDETAILS
							(ORDERNUMBER, PRODUCTCODE, QUANTITYORDERED, PRICEEACH, ORDERLINENUMBER)
							VALUES (VAR_NUMEROPEDIDO, CODIGO_PRODUTO, VAR_QUANTIDADEPRODUTOS, VAR_PRECO, 0 );
                            
                            UPDATE 	PRODUCTS
								SET QUANTITYINSTOCK = QUANTITYINSTOCK - VAR_QUANTIDADEPRODUTOS
								WHERE PRODUCTCODE = CODIGO_PRODUTO;
                                
                                
                        END IF;
                    END IF; 
                   SET VAR_RESULTADO = RESULTADO ;
END$
DELIMITER ;